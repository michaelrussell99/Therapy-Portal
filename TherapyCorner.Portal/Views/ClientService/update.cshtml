@using TherapyCorner.Portal.Models
@using TherapyCorner.Portal.ResourceText;
@using www.therapycorner.com.company;
@using www.therapycorner.com.company.MessageContracts;

@model ClientService
@{
    ViewBag.Title = ClientPages.UpdateService;
    ViewBag.CurArea = MenuArea.Clients;
    var token = UserAuthorization.CurrentUser;

    ServiceInfo service = ViewBag.Service;
    var rates = new List<SelectListItem>();
    foreach (var s in service.Rates)
    {

        rates.Add(new SelectListItem() { Value = s.UniqueId, Text = s.Name, Selected = Model.Rate.UniqueId == s.UniqueId });
    }

    var durations = new List<SelectListItem>();
    foreach (var s in service.Frequencies)
    {

        durations.Add(new SelectListItem() { Value = s.UniqueId, Text = s.Name, Selected = Model.Duration.UniqueId == s.UniqueId });
    }

    var providers = new List<SelectListItem>();
    foreach (var s in service.Providers)
    {

        providers.Add(new SelectListItem() { Value = s.UniqueId, Text = s.Name, Selected = Model.Provider.UniqueId == s.UniqueId });
    }

    var locations = new List<SelectListItem>();
    if (service.AllowClient)
    {
        locations.Add(new SelectListItem() { Value = LocationEnum.ClientHome.ToString(), Text = "Client Home", Selected = Model.Location == LocationEnum.ClientHome });
    }
    if (service.AllowProvider)
    {
        locations.Add(new SelectListItem() { Value = LocationEnum.ProviderHome.ToString(), Text = "Provider Home", Selected = Model.Location == LocationEnum.ProviderHome });
    }
    if (service.AllowClinic)
    {
        locations.Add(new SelectListItem() { Value = LocationEnum.Clinic.ToString(), Text = "Clinic", Selected = Model.Location == LocationEnum.Clinic });
    }
}

<h2 class="breadcrumb">@Html.ActionLink(SharedPages.Clients, "index", "client") &gt; @Html.ActionLink(string.Format("{0}: {1}", Dictionary.Details, Model.Client.LastFirst), "details", "client", new { id = Model.Client.UniqueId }, null) &gt; @ClientPages.UpdateService</h2>
@using (Html.BeginForm("update", "clientservice", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Version)
    @Html.HiddenFor(m => m.Client.Context)
    @Html.HiddenFor(m => m.Client.FirstName)
    @Html.HiddenFor(m => m.Client.LastName)
    @Html.HiddenFor(m => m.Client.UniqueId)
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.Service.Context)
    @Html.HiddenFor(m => m.Rate.Context)
    @Html.HiddenFor(m => m.Duration.Context)
    @Html.HiddenFor(m => m.Provider.Context)
    @Html.HiddenFor(m => m.Service.UniqueId)
    @Html.HiddenFor(m => m.End)
    <section class="halfspace">
        <div class="form-group">
            <label>@Dictionary.Service</label>
            <span class="form-control">@service.Name</span>
        </div>
        <div class="form-group">
            <label>@ClientPages.ClientRate</label>
            @Html.DropDownList("Rate.UniqueId", rates, new { @class = "form-control nonbiller" })
        </div>
        <div class="form-group">
            <label>@ClientPages.FreqDur</label>
            @Html.DropDownList("Duration.UniqueId", durations, new { @class = "form-control nonbiller" })
        </div>
        <div class="form-group">
            <label>@Dictionary.ServiceProvider</label>
            @Html.DropDownList("Provider.UniqueId", providers, new { @class = "form-control nonbiller" })
        </div>
        <div class="form-group">
            <label>@Dictionary.Locations</label>
            @Html.DropDownList("Location", locations, new { @class = "form-control nonbiller" })
        </div>

    </section>
    <section class="halfspace">

        <div class="form-group">
            <label>@Dictionary.StartedOn</label>
            @Html.TextBoxFor(m => m.Start, new { @class = "form-control DateText nonbiller", maxlength = 10 })
            @Html.ValidationMessageFor(m => m.Start, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>@Dictionary.ApprovedFrom</label>
            @Html.TextBoxFor(m => m.ApprovedFrom, new { @class = "form-control DateText nonbiller", maxlength = 10 })
            @Html.ValidationMessageFor(m => m.ApprovedFrom, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label>@Dictionary.ApprovedTo</label>
            @Html.TextBoxFor(m => m.ApprovedTo, new { @class = "form-control DateText nonbiller", maxlength = 10 })
            @Html.ValidationMessageFor(m => m.ApprovedTo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label>@Dictionary.Prescription</label>
            <input type="file" name="file" class="form-control nonbiller" />
            @Html.EditorFor(m => m.NoRx) @ClientPages.NoneNeeded
        </div>
    </section>
    <section>
        <h3>@ClientPages.CPTAssignments</h3>
        <table>
            <thead>
                <tr>
                    <th colspan="2">@Dictionary.CPTCode</th>
                    <th>@Dictionary.Amount</th>
                    <th>Modifier 1</th>
                    <th>Modifier 2</th>
                    <th>Modifier 3</th>
                </tr>
            </thead>
            <tbody id="CPTValues">
                @if (Model.CPTs != null && Model.CPTs.Count > 0)
                {
                    int x = 0;
                    foreach (var c in Model.CPTs)
                    {
                        ViewBag.CPTCounter = x;
                        @Html.Partial("_CPTListing", c)
                        x++;
                    }
                }

            </tbody>
        </table>
    </section>
    <p style="text-align:right">
        <button onclick="submitit()" type="submit">@Dictionary.Save</button><button type="button" onclick="window.location='@Url.Action("details","client",new { id = Model.Client.UniqueId })'">@Dictionary.Cancel</button>
        @if (!Model.End.HasValue && (token.IsAdmin || token.IsWorker))
        {
            if (Model.ScheduledCount.GetValueOrDefault(0) == 0 && !Model.Approved)
            {
                <button type="button" onclick="DeleteMe()">@Dictionary.Delete</button>
            }
            <button type="button" onclick="EndMe()">@Dictionary.Discontinue</button>
        }
        @if (!string.IsNullOrWhiteSpace(Model.RxFileExtension))
        {
            <button type="button" onclick="window.open('@Url.Action("image",new { id = Model.Id })','_blank')">@ClientPages.ViewRx</button>

        }
    </p>
}
<style>
    .CPTMod {
        width: 65px
    }
</style>

@if (token.IsAdmin || token.IsWorker)
{
    <div id="modalDelete" style="display:none" title="@Dictionary.Delete">
        <p>@ClientPages.DeleteSvcInstr </p>
        @using (Html.BeginForm("delete", "clientservice", FormMethod.Post, new { role = "form", id = "frmDel" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("Id", Model.Id)

        }
    </div>

    <div id="modalDisc" style="display:none" title="@Dictionary.Discontinue">
        <p>@ClientPages.DiscSvcInstr </p>
        @using (Html.BeginForm("discontinue", "clientservice", FormMethod.Post, new { role = "form", id = "frmDisc" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("Id", Model.Id)

        }
    </div>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var diagRemove, diagDisc;

        $(document).ready(function () {
            diagRemove = $("#modalDelete").dialog({
                autoOpen: false,
                width: 365,
                modal: true,
                buttons: { "Yes": function () { ConfirmDel(); }, "No": function () { diagRemove.dialog("close"); } }
            });

            diagDisc = $("#modalDisc").dialog({
                autoOpen: false,
                width: 365,
                modal: true,
                buttons: { "Yes": function () { ConfirmDisc(); }, "No": function () { diagDisc.dialog("close"); } }
            });

        });

        function DeleteMe() {

            diagRemove.dialog("open");
        }

        function EndMe() {

            diagDisc.dialog("open");
        }

        function ConfirmDel() {
            submitit();
            diagRemove.dialog("close");
            $("#frmDel").submit();
        }

        function ConfirmDisc() {
            submitit();
            diagDisc.dialog("close");
            $("#frmDisc").submit();
        }
    </script>

    @if (!(token.IsAdmin || token.IsWorker))
    {
        <script>
            $(document).ready(function () {
                $('.nonbiller').prop("disabled", true);
            });
        </script>
    }
}