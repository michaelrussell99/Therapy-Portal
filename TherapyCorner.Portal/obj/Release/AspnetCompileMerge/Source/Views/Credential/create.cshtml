@using TherapyCorner.Portal.Models
@using TherapyCorner.Portal.ResourceText;
@using www.therapycorner.com.account;

@model CredentialInfo

@{
    ViewBag.Title = CredentialPages.CreateCredential;
    var types = StaticData.CredentialTypes;
    types.Sort((a, b) => a.Name.CompareTo(b.Name));
    List<SelectListItem> values = new List<SelectListItem>();
    foreach(var t in types)
    {
        values.Add(new SelectListItem() { Value = t.UniqueId, Text = t.Name, Selected = t.UniqueId == Model.Type.UniqueId });
    }

}
<h2 class="breadcrumb">@Html.ActionLink(ProfilePages.MyProfile, "index", "profile") &gt; @CredentialPages.CreateCredential</h2>
@using (Html.BeginForm("create", "credential", FormMethod.Post, new { @class = "form-horizontal", role = "form" ,enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Type.Context)
    @Html.HiddenFor(m => m.User.Context)
    @Html.HiddenFor(m => m.User.FirstName)
    @Html.HiddenFor(m => m.User.LastName)
    @Html.HiddenFor(m => m.User.UniqueId)
    @Html.HiddenFor(m => m.CredentialId)

 
        <div class="form-group">
            <label>@Dictionary.Type</label>
            @Html.DropDownList("Type.UniqueId", values)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ValidFrom)
            @Html.TextBoxFor(m => m.ValidFrom, new { @class = "form-control DateText", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.ValidFrom, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ValidTo)
            @Html.TextBoxFor(m => m.ValidTo, new { @class = "form-control DateText", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.ValidTo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DocumentId)
            @Html.TextBoxFor(m => m.DocumentId, new { @class = "form-control", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.DocumentId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>@CredentialPages.CopyOfCredential</label>
            <input type="file" name="file" class="form-control"/>
        </div>
     

    <p style="text-align:right"><button onclick="submitit()" type="submit">@Dictionary.Create</button><button  type="button" onclick="window.location='@Url.Action("index","profile")'">@Dictionary.Cancel</button></p>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")


}