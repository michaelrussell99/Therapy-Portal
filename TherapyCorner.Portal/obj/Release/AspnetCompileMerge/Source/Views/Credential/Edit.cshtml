@using TherapyCorner.Portal.Models
@using TherapyCorner.Portal.ResourceText;
@using www.therapycorner.com.account;

@model CredentialInfo

@{
    ViewBag.Title = CredentialPages.EditCredential;
    var types = StaticData.CredentialTypes;
    types.Sort((a, b) => a.Name.CompareTo(b.Name));
    List<SelectListItem> values = new List<SelectListItem>();
    foreach (var t in types)
    {
        values.Add(new SelectListItem() { Value = t.UniqueId, Text = t.Name, Selected = t.UniqueId == Model.Type.UniqueId });
    }

}
<h2 class="breadcrumb">@Html.ActionLink(ProfilePages.MyProfile, "index", "profile") &gt; @CredentialPages.EditCredential</h2>
@using (Html.BeginForm("edit", "credential", FormMethod.Post, new { @class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Type.Context)
    @Html.HiddenFor(m => m.User.Context)
    @Html.HiddenFor(m => m.User.FirstName)
    @Html.HiddenFor(m => m.User.LastName)
    @Html.HiddenFor(m => m.User.UniqueId)
    @Html.HiddenFor(m => m.CredentialId)
    @Html.HiddenFor(m=>m.Type.UniqueId)
    @Html.HiddenFor(m=>m.Type.Name)
    @Html.HiddenFor(m => m.Version)
    @Html.HiddenFor(m => m.ImageExt)
    @Html.HiddenFor(m => m.ImageType)
    <div class="form-group">
        <label>@Dictionary.Type</label>
        <span class="form-control">@Model.Type.Name</span>
    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ValidFrom)
            @Html.TextBoxFor(m => m.ValidFrom, new { @class = "form-control DateText", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.ValidFrom, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ValidTo)
            @Html.TextBoxFor(m => m.ValidTo, new { @class = "form-control DateText", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.ValidTo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DocumentId)
            @Html.TextBoxFor(m => m.DocumentId, new { @class = "form-control", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.DocumentId, "", new { @class = "text-danger" })
        </div>

 


        <p style="text-align:right"><button onclick="submitit()" type="submit">@Dictionary.Save</button><button  type="button" onclick="window.location='@Url.Action("index","profile")'">@Dictionary.Cancel</button>
            <button type="button" onclick="DeleteMe()">@Dictionary.Delete</button>
            <button type="button" onclick="ChangeMe()">@CredentialPages.ChangeImage</button>
    @if (!string.IsNullOrWhiteSpace(Model.ImageExt))
    {
    <button type="button" onclick="RemoveMe()">@CredentialPages.RemoveImage</button>
    }
    </p>
}

<div id="modalDelete" style="display:none" title="@Dictionary.Delete">
    <p>@CredentialPages.DeleteConfirm </p>
    @using (Html.BeginForm("delete", "credential", FormMethod.Post, new { role = "form", id = "frmDel" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Id", Model.CredentialId)

    }
</div>

<div id="modalChange" style="display:none" title="@CredentialPages.ChangeImage">
    <p>@CredentialPages.ChangeImageInstr </p>
@using (Html.BeginForm("setimage", "credential", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id="frmChange" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Type.Context)
    @Html.HiddenFor(m => m.User.Context)
    @Html.HiddenFor(m => m.User.FirstName)
    @Html.HiddenFor(m => m.User.LastName)
    @Html.HiddenFor(m => m.User.UniqueId)
    @Html.HiddenFor(m => m.CredentialId)
    @Html.HiddenFor(m => m.Type.UniqueId)
    @Html.HiddenFor(m => m.Type.Name)
    @Html.HiddenFor(m => m.Version)
    @Html.HiddenFor(m => m.ValidTo)
 @Html.HiddenFor(m=>m.ValidFrom)
    @Html.HiddenFor(m => m.DocumentId)


        <div class="form-group">
            <input type="file" name="file" class="form-control" />
        </div>



}
</div>
<div id="modelRemove" style="display:none" title="@CredentialPages.RemoveImage">
    <p>@CredentialPages.RemoveImageInstr </p>
    @using (Html.BeginForm("RemoveImage", "credential", FormMethod.Post, new { @class = "form-horizontal", role = "form",  id = "frmRemove" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Type.Context)
        @Html.HiddenFor(m => m.User.Context)
        @Html.HiddenFor(m => m.User.FirstName)
        @Html.HiddenFor(m => m.User.LastName)
        @Html.HiddenFor(m => m.User.UniqueId)
        @Html.HiddenFor(m => m.CredentialId)
        @Html.HiddenFor(m => m.Type.UniqueId)
        @Html.HiddenFor(m => m.Type.Name)
        @Html.HiddenFor(m => m.Version)
        @Html.HiddenFor(m => m.ValidTo)
        @Html.HiddenFor(m => m.ValidFrom)
        @Html.HiddenFor(m => m.DocumentId)






    }
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
<script>
        var diagRemove, diagChange, diagRemImg;

        $(document).ready(function () {
            diagRemove = $("#modalDelete").dialog({
                autoOpen: false,
                width: 365,
                modal: true,
                buttons: { "Yes": function () { ConfirmDel(); }, "No": function () { diagRemove.dialog("close"); } }
            });

            diagChange = $("#modalChange").dialog({
                autoOpen: false,
                width: 365,
                modal: true,
                buttons: { "Change": function () { ConfirmChange(); }, "Cancel": function () { diagChange.dialog("close"); } }
            });

            diagRemImg = $("#modelRemove").dialog({
                autoOpen: false,
                width: 365,
                modal: true,
                buttons: { "Yes": function () { ConfirmRemImg(); }, "No": function () { diagRemImg.dialog("close"); } }
            });

        });

        function DeleteMe()
        {

        diagRemove.dialog("open");
        }

        function ChangeMe() {

            diagChange.dialog("open");
        }

        function RemoveMe() {

            diagRemImg.dialog("open");
        }

        function ConfirmDel() {
        submitit();
        diagRemove.dialog("close");
        $("#frmDel").submit();
        }

        function ConfirmChange() {
            submitit();
            diagChange.dialog("close");
            $("#frmChange").submit();
        }
        function ConfirmRemImg() {
            submitit();
            diagRemImg.dialog("close");
            $("#frmRemove").submit();
        }
     
</script>
}

