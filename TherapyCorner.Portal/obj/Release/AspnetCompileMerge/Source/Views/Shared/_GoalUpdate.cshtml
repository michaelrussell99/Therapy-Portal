@using www.therapycorner.com.company;
@using TherapyCorner.Portal.ResourceText;
@model GoalUpdate
@{
    string parentPrefix = ViewBag.Prefix;
    int index = ViewBag.Index;
    string prefix = string.Format("{0}[{1}].", parentPrefix, index);
    bool readOnly = ViewBag.ReadOnly;
    bool? toggleApprove = ViewBag.ToggleApprove;
    string changeAction = toggleApprove.GetValueOrDefault(false) ?  "DisableApprove()":"";

    List<SelectListItem> actions = new List<SelectListItem>();
    actions.Add(new SelectListItem() { Value = GoalActionEnum.LeaveActive.ToString(), Text = GoalActionEnum.LeaveActive.ToString(), Selected = Model.Action.GetValueOrDefault(GoalActionEnum.LeaveActive) == GoalActionEnum.LeaveActive });
    actions.Add(new SelectListItem() { Value = GoalActionEnum.Complete.ToString(), Text = GoalActionEnum.Complete.ToString(), Selected = Model.Action.GetValueOrDefault(GoalActionEnum.LeaveActive) == GoalActionEnum.Complete });
    actions.Add(new SelectListItem() { Value = GoalActionEnum.Remove.ToString(), Text = GoalActionEnum.Remove.ToString(), Selected = Model.Action.GetValueOrDefault(GoalActionEnum.LeaveActive) == GoalActionEnum.Remove });
}
<div class="GoalUpdate">
    <h5 style="font-size:medium">
        <span style="float:left"><a href="@Url.Action("goaldetails","client",new { id = Model.Goal.GoalId, client=Model.Goal.Client.UniqueId })"><img style="width:25px" src="~/images/magnify.png" /></a></span>

        @Model.Goal.Statement<br />
    <span style="float:right">@Model.Goal.Success of @Model.Goal.Attempts @Model.Goal.Units</span>
</h5>
    <div class="form-group">
        <label>@SharedPages.Strategies</label>
        @if (readOnly)
        {
            <br /><span>
                &nbsp; &nbsp;@Model.Strategies
            </span>
            @Html.Hidden(prefix + "Strategies", Model.Strategies)

        }
        else
        {

            @Html.TextArea(prefix + "Strategies", Model.Strategies, new { @class = "form-control", onchange=changeAction })

            @Html.ValidationMessage(prefix + "Strategies", new { @class = "text-danger" })
        }
    </div>
    <div class="form-group">
        <label>@SharedPages.Progress</label>
        @if (readOnly)
        {
            <br /><span>
                &nbsp; &nbsp;@Model.Progress
            </span>
            @Html.Hidden(prefix + "Progress", Model.Progress)

        }
        else
        {

            @Html.TextArea(prefix + "Progress", Model.Progress, new { @class = "form-control", onchange = changeAction })

            @Html.ValidationMessage(prefix + "Progress", new { @class = "text-danger" })
        }
    </div>
    <div class="form-group">
        <label>@SharedPages.Recommendations</label>
        @if (readOnly)
        {
            <br /><span>
                &nbsp; &nbsp;@Model.Recommendations
            </span>
            @Html.Hidden(prefix + "Recommendations", Model.Recommendations)

        }
        else
        {

            @Html.TextArea(prefix + "Recommendations", Model.Recommendations, new { @class = "form-control", onchange = changeAction })

            @Html.ValidationMessage(prefix + "Recommendations", new { @class = "text-danger" })
        }
    </div>
    <div class="form-group">
        <label>@SharedPages.GoalAction</label>
        @if (readOnly)
        {
            <br /><span>
                &nbsp; &nbsp;@(Model.Action.HasValue?Model.Action.Value.ToString() : "")
            </span>
            @Html.Hidden(prefix + "Action", Model.Action)

        }
        else
        {
            @Html.DropDownList(prefix + "Action",actions,new { @class = "form-control" })
        }
    </div>
    @Html.Hidden(prefix + "Goal.GoalId", Model.Goal.GoalId)
    @Html.Hidden(prefix + "Goal.Statement", Model.Goal.Statement)
    @Html.Hidden(prefix + "Goal.Attempts", Model.Goal.Attempts)
    @Html.Hidden(prefix + "Goal.Success", Model.Goal.Success)
    @Html.Hidden(prefix + "Goal.Units", Model.Goal.Units)
    @Html.Hidden(string.Format("{0}.Index", parentPrefix), index)






</div>
